name: Run Python Script

on:
  push:
    branches:
      - main  # Change this if you use a different branch

jobs:
  run-python:
    runs-on: self-hosted  # Tells GitHub to use your laptop

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Compile Python to bytecode
        run: python -m compileall main.py

      - name: Run compiled bytecode
        run: python __pycache__/main.cpython-*.pyc


      - name: Run Python script
        run: python3 test.py


# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: self-hosted  # This targets your self-hosted runner

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

      # - name: Set up Python (if using Python)
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      # - name: Run tests
      #   run: |
      #     python -m unittest discover tests/











# name: OTA Update Pipeline

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     env:
#       DEVICE_TYPE: ubuntu-laptop
#       ARTIFACT_NAME: release-1
#       SOFTWARE_VERSION: 1.0.0
#       MENDER_SERVER_URL: https://hosted.mender.io
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Set Up Docker
#         uses: docker/setup-buildx-action@v2

#       - name: Install mender-artifact Tool
#         run: |
#           wget https://downloads.mender.io/tools/mender-artifact/latest/mender-artifact
#           chmod +x mender-artifact
#           sudo mv mender-artifact /usr/local/bin/

#       - name: Build Application
#         run: |
#           ./build.sh  # Replace with your actual build script

#       - name: Create Mender Artifact
#         run: |
#           mender-artifact write rootfs-image \
#             -t $DEVICE_TYPE \
#             -n $ARTIFACT_NAME \
#             --software-version $SOFTWARE_VERSION \
#             -f path/to/rootfs.ext4 \
#             -o $ARTIFACT_NAME.mender

#       - name: Upload Mender Artifact
#         uses: mendersoftware/mender-gh-action-upload-artifact@v1
#         with:
#           mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
#           mender_artifact: ${{ env.ARTIFACT_NAME }}.mender
#           mender_uri: ${{ env.MENDER_SERVER_URL }}

#       - name: Create Deployment
#         uses: mendersoftware/mender-gh-action-create-deployment@v1
#         with:
#           mender_pat: ${{ secrets.MENDER_SERVER_ACCESS_TOKEN }}
#           artifact_name: ${{ env.ARTIFACT_NAME }}
#           device_group: ubuntu-laptop-group  # Replace with your device group name
#           mender_uri: ${{ env.MENDER_SERVER_URL }}
